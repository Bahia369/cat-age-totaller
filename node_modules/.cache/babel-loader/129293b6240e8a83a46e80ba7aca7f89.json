{"ast":null,"code":"var _jsxFileName = \"/Users/suman/Documents/GitHub/cat-age-totaller/src/AgeTotaller.js\",\n    _this = this;\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AgeTotaller = function AgeTotaller() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AgeTotaller\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = AgeTotaller;\nexport default AgeTotaller;\n\nvar AgeCounter = function AgeCounter() {\n  // 2 Buttons with on click.\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    classname: \"AgeCounter\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add A Year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add New Life\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Display Current Age\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, _this);\n}; // 1. Create a AgeCounter component which uses useState to store the current age and has two buttons - one to add a year (increment state by 1) and one to add a new life (set state back to 0). Create these functions and use the onClick event on the buttons to use them. Display the current age within the AgeCounter component in a h3 tag. Use a className of \".AgeCounter\" for the component (it should be a div with a h3 tag and two buttons inside, the CSS is already provided in styles.css).\n\n\n_c2 = AgeCounter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AgeTotaller\");\n$RefreshReg$(_c2, \"AgeCounter\");","map":{"version":3,"sources":["/Users/suman/Documents/GitHub/cat-age-totaller/src/AgeTotaller.js"],"names":["React","AgeTotaller","AgeCounter"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAND;;KAAMA,W;AAQN,eAAeA,WAAf;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB;;AAEA;AAAA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAKD,CARD,C,CAUA;;;MAVMA,U","sourcesContent":["import React from \"react\";\n\nconst AgeTotaller = () => {\n  return (\n    <div className=\"AgeTotaller\">\n      <div className=\"cats\"></div>\n    </div>\n  );\n};\n\nexport default AgeTotaller;\n\nconst AgeCounter = () => {\n  // 2 Buttons with on click.\n\n  <div classname=\"AgeCounter\">\n    <button>Add A Year</button>\n    <button>Add New Life</button>\n    <h3>Display Current Age</h3>\n  </div>;\n};\n\n// 1. Create a AgeCounter component which uses useState to store the current age and has two buttons - one to add a year (increment state by 1) and one to add a new life (set state back to 0). Create these functions and use the onClick event on the buttons to use them. Display the current age within the AgeCounter component in a h3 tag. Use a className of \".AgeCounter\" for the component (it should be a div with a h3 tag and two buttons inside, the CSS is already provided in styles.css).\n"]},"metadata":{},"sourceType":"module"}